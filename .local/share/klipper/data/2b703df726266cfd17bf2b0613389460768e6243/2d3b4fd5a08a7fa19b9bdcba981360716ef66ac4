<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
<span style="font-family:monospace"><span style="color:#5fd700;background-color:#ffffff;">‚ùØ</span><span style="color:#000000;background-color:#ffffff;"> </span><span style="color:#18b218;background-color:#ffffff;">cat</span><span style="color:#000000;background-color:#ffffff;"> </span><span style="text-decoration:underline;color:#000000;background-color:#ffffff;">/home/maurod/.cache/hyprland/hyprlandCrashReport1284.txt</span><span style="color:#000000;background-color:#ffffff;">
</span><br><span style="color:#000000;background-color:#ffffff;">--------------------------------------------</span><span style="color:#000000;background-color:#ffffff;">
</span><br><span style="color:#000000;background-color:#ffffff;"> &#160;&#160;Hyprland Crash Report</span><span style="color:#000000;background-color:#ffffff;">
</span><br><span style="color:#000000;background-color:#ffffff;">--------------------------------------------</span><span style="color:#000000;background-color:#ffffff;">
</span><br><span style="color:#000000;background-color:#ffffff;">This was an accident, I swear!</span><span style="color:#000000;background-color:#ffffff;">
</span><br>
<br><span style="color:#000000;background-color:#ffffff;">Hyprland received signal 11(SEGV)</span><span style="color:#000000;background-color:#ffffff;">
</span><br><span style="color:#000000;background-color:#ffffff;">Version: 9958d297641b5c84dcff93f9039d80a5ad37ab00</span><span style="color:#000000;background-color:#ffffff;">
</span><br><span style="color:#000000;background-color:#ffffff;">Tag: v0.49.0</span><span style="color:#000000;background-color:#ffffff;">
</span><br><span style="color:#000000;background-color:#ffffff;">Date: Thu May 8 20:15:18 2025</span><span style="color:#000000;background-color:#ffffff;">
</span><br><span style="color:#000000;background-color:#ffffff;">Flags:</span><span style="color:#000000;background-color:#ffffff;">
</span><br>
<br><span style="color:#000000;background-color:#ffffff;">System info:</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">System name: Linux</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">Node name: PCARCH</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">Release: 6.15.6-arch1-1</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">Version: #1 SMP PREEMPT_DYNAMIC Thu, 10 Jul 2025 17:10:18 +0000</span><span style="color:#000000;background-color:#ffffff;">
</span><br>
<br><span style="color:#000000;background-color:#ffffff;">GPU:</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">01:00.0 VGA compatible controller [0300]: NVIDIA Corporation GP104 [GeForce GTX 1070] [10de:1b81] (rev a1) (prog-if 00 [VGA controller])</span><span style="color:#000000;background-color:#ffffff;">
</span><br>
<br>
<br><span style="color:#000000;background-color:#ffffff;">os-release:</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">NAME="Arch Linux"</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">PRETTY_NAME="Arch Linux"</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">ID=arch</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">BUILD_ID=rolling</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">ANSI_COLOR="38;2;23;147;209"</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">HOME_URL="https://archlinux.org/"</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">DOCUMENTATION_URL="https://wiki.archlinux.org/"</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">SUPPORT_URL="https://bbs.archlinux.org/"</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">BUG_REPORT_URL="https://gitlab.archlinux.org/groups/archlinux/-/issues"</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">PRIVACY_POLICY_URL="https://terms.archlinux.org/docs/privacy-policy/"</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">LOGO=archlinux-logo</span><span style="color:#000000;background-color:#ffffff;">
</span><br><span style="color:#000000;background-color:#ffffff;">Backtrace:</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;"># | hyprland(_Z12getBacktracev+0x61) [0x55c0626a7b31]</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">getBacktrace()</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">??:?</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">#1 | hyprland(_ZN14NCrashReporter18createAndSaveCrashEi+0x13c7) [0x55c0625f5147]</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">NCrashReporter::createAndSaveCrash(int)</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">??:?</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">#2 | hyprland(+0x221ff8) [0x55c062562ff8]</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">CCompositor::prepareFallbackOutput()</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">??:?</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">#3 | /usr/lib/libc.so.6(+0x3def0) [0x7f8398555ef0]</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">??</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">??:0</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">#4 | /usr/lib/libc.so.6(+0x16c287) [0x7f8398684287]</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">??</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">??:0</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">#5 | hyprland(_ZN15CPointerManager20renderHWCursorBufferEN9Hyprutils6Memory14CSharedPointerINS_20SMonitorPointerStateEEENS2_I8CTextureEE+0x11e9) [0x55c06273a9f9]</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">CPointerManager::renderHWCursorBuffer(Hyprutils::Memory::CSharedPointer&lt;CPointerManager::SMonitorPointerState&gt;, Hyprutils::Memory::CSharedPointer&lt;CTexture&gt;)</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">??:?</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">#6 | hyprland(_ZN15CPointerManager21attemptHardwareCursorEN9Hyprutils6Memory14CSharedPointerINS_20SMonitorPointerStateEEE+0x1ee) [0x55c06273f60e]</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">CPointerManager::attemptHardwareCursor(Hyprutils::Memory::CSharedPointer&lt;CPointerManager::SMonitorPointerState&gt;)</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">??:?</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">#7 | hyprland(_ZN15CPointerManager19updateCursorBackendEv+0x466) [0x55c06273fdc6]</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">CPointerManager::updateCursorBackend()</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">??:?</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">#8 | hyprland(_ZN15CPointerManager13onCursorMovedEv+0x609) [0x55c062740589]</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">CPointerManager::onCursorMoved()</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">??:?</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">#9 | hyprland(_ZN15CPointerManager4moveERKN9Hyprutils4Math8Vector2DE+0x128) [0x55c0627408a8]</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">CPointerManager::move(Hyprutils::Math::Vector2D const&amp;)</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">??:?</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">#1 | hyprland(_ZN13CInputManager12onMouseMovedEN8IPointer12SMotionEventE+0x1fa) [0x55c0627968aa]</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">CInputManager::onMouseMoved(IPointer::SMotionEvent)</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">??:?</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">#11 | hyprland(+0x407d2a) [0x55c062748d2a]</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">CPointerManager::attachTablet(Hyprutils::Memory::CSharedPointer&lt;CTablet&gt;)</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">??:?</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">#12 | hyprland(_ZNSt17_Function_handlerIFvRKSt3anyEZN9Hyprutils6Signal8CSignalTIJS0_EE16registerListenerESt8functionIFvS0_EEEUlS2_E_E9_M_invokeERKSt9_Any_dataS2_+0x8a) [0x55c06262c35a]</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">std::_Function_handler&lt;void (std::any const&amp;), Hyprutils::Signal::CSignalT&lt;std::any&gt;::registerListener(std::function&lt;void (std::any)&gt;)::{lambda(std::any const&amp;)#1}&gt;::_M_invoke(std::_Any_data const&amp;, std::any const&amp;)</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">??:?</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">#13 | /usr/lib/libhyprutils.so.7(_ZN9Hyprutils6Signal15CSignalListener12emitInternalEPv+0x2d) [0x7f83991a5c6d]</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">??</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">??:0</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">#14 | /usr/lib/libhyprutils.so.7(_ZN9Hyprutils6Signal11CSignalBase12emitInternalEPv+0x195) [0x7f83991a5ec5]</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">??</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">??:0</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">#15 | hyprland(+0x335015) [0x55c062676015]</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">std::_Function_handler&lt;void (Aquamarine::IPointer::SSwipeBeginEvent const&amp;), Hyprutils::Signal::CSignalT&lt;Aquamarine::IPointer::SSwipeBeginEvent&gt;::registerListener(std::function&lt;void (std::any)&gt;)::{lambda(Aquamarine::</span><br>IPointer::SSwipeBeginEvent const&amp;)#1}&gt;::_M_manager(std::_Any_data&amp;, std::_Any_data const&amp;, std::_Manager_operation)<span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">??:?</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">#16 | hyprland(_ZNSt17_Function_handlerIFvRKN10Aquamarine8IPointer10SMoveEventEEZN9Hyprutils6Signal8CSignalTIJS2_EE16registerListenerESt8functionIFvSt3anyEEEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_+0x91) [0x55c0626728e1]</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">std::_Function_handler&lt;void (Aquamarine::IPointer::SMoveEvent const&amp;), Hyprutils::Signal::CSignalT&lt;Aquamarine::IPointer::SMoveEvent&gt;::registerListener(std::function&lt;void (std::any)&gt;)::{lambda(Aquamarine::IPointer::SM</span><br>oveEvent const&amp;)#1}&gt;::_M_invoke(std::_Any_data const&amp;, Aquamarine::IPointer::SMoveEvent const&amp;)<span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">??:?</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">#17 | /usr/lib/libhyprutils.so.7(_ZN9Hyprutils6Signal15CSignalListener12emitInternalEPv+0x2d) [0x7f83991a5c6d]</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">??</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">??:0</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">#18 | /usr/lib/libhyprutils.so.7(_ZN9Hyprutils6Signal11CSignalBase12emitInternalEPv+0x195) [0x7f83991a5ec5]</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">??</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">??:0</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">#19 | /usr/lib/libaquamarine.so.8(_ZN10Aquamarine8CSession19handleLibinputEventEP14libinput_event+0x152f) [0x7f839927ef2f]</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">??</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">??:0</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">#2 | /usr/lib/libaquamarine.so.8(_ZN10Aquamarine8CSession22dispatchLibinputEventsEv+0x1d4) [0x7f839927fb34]</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">??</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">??:0</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">#21 | hyprland(+0x44a4ba) [0x55c06278b4ba]</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">std::any::_Manager_internal&lt;Hyprutils::Memory::CSharedPointer&lt;CIdleInhibitor&gt; &gt;::_S_manage(std::any::_Op, std::any const*, std::any::_Arg*)</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">??:?</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">#22 | /usr/lib/libwayland-server.so.0(wl_event_loop_dispatch+0x1f2) [0x7f839908b112]</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">??</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">??:0</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">#23 | /usr/lib/libwayland-server.so.0(wl_display_run+0x37) [0x7f839908d1f7]</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">??</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">??:0</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">#24 | hyprland(_ZN17CEventLoopManager9enterLoopEv+0x1a9) [0x55c06278da89]</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">CEventLoopManager::enterLoop()</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">??:?</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">#25 | hyprland(main+0x1125) [0x55c06250c0d5]</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">main</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">??:?</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">#26 | /usr/lib/libc.so.6(+0x276b5) [0x7f839853f6b5]</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">??</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">??:0</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">#27 | /usr/lib/libc.so.6(__libc_start_main+0x89) [0x7f839853f769]</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">??</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">??:0</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">#28 | hyprland(_start+0x25) [0x55c06255ed05]</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">_start</span><span style="color:#000000;background-color:#ffffff;">
</span><br> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color:#000000;background-color:#ffffff;">??:?</span><span style="color:#000000;background-color:#ffffff;">
</span><br>
<br>
<br><span style="color:#000000;background-color:#ffffff;">Log tail:</span><span style="color:#000000;background-color:#ffffff;">
</span><br><span style="color:#000000;background-color:#ffffff;">[LOG] Searching for matching rules for org.kde.dolphin (title: /home/maurod ‚Äî Dolphin)</span><span style="color:#000000;background-color:#ffffff;">
</span><br><span style="color:#000000;background-color:#ffffff;">[LOG] Window rule suppressevent maximize -&gt; &#160;class:.* matched [Window 55c0892799a0: title: "/home/maurod ‚Äî Dolphin"]</span><span style="color:#000000;background-color:#ffffff;">
</span><br><span style="color:#000000;background-color:#ffffff;">[LOG] Searching for matching rules for org.kde.dolphin (title: /home/maurod ‚Äî Dolphin)</span><span style="color:#000000;background-color:#ffffff;">
</span><br><span style="color:#000000;background-color:#ffffff;">[LOG] Window rule suppressevent maximize -&gt; &#160;class:.* matched [Window 55c0892799a0: title: "/home/maurod ‚Äî Dolphin"]</span><span style="color:#000000;background-color:#ffffff;">
</span><br><span style="color:#000000;background-color:#ffffff;">[LOG] Keybind triggered, calling dispatcher (64, mouse:272, 0, mouse)</span><span style="color:#000000;background-color:#ffffff;">
</span><br><span style="color:#000000;background-color:#ffffff;">[LOG] [AQ] [libinput] event4 &#160;- debounce state: DEBOUNCE_STATE_IS_UP_DETECTING_SPURIOUS ‚Üí DEBOUNCE_EVENT_TIMEOUT_SHORT ‚Üí DEBOUNCE_STATE_IS_UP_WAITING</span><span style="color:#000000;background-color:#ffffff;">
</span><br>
<br><span style="color:#000000;background-color:#ffffff;">[LOG] [AQ] [libinput] event4 &#160;- debounce state: DEBOUNCE_STATE_IS_UP_WAITING ‚Üí DEBOUNCE_EVENT_TIMEOUT ‚Üí DEBOUNCE_STATE_IS_UP</span><span style="color:#000000;background-color:#ffffff;">
</span><br>
<br><span style="color:#000000;background-color:#ffffff;">[LOG] [CXDGSurfaceResource] xdg_surface 55c08920a4e0 requests geometry 0x0 1876x1036</span><span style="color:#000000;background-color:#ffffff;">
</span><br><span style="color:#000000;background-color:#ffffff;">[LOG] [CWLCompositorResource] New wl_region with id 42 at 55c088b3a190</span><span style="color:#000000;background-color:#ffffff;">
</span><br><span style="color:#000000;background-color:#ffffff;">[LOG] [CXDGSurfaceResource] xdg_surface 55c08920a4e0 requests geometry 0x0 1876x1036</span><span style="color:#000000;background-color:#ffffff;">
</span><br><span style="color:#000000;background-color:#ffffff;">[LOG] cursorImage request: shape 9 -&gt; text</span><span style="color:#000000;background-color:#ffffff;">
</span><br><span style="color:#000000;background-color:#ffffff;">[LOG] [AQ] drm: Cursor buffer imported into KMS with id 138</span><span style="color:#000000;background-color:#ffffff;">
</span><br><span style="color:#000000;background-color:#ffffff;">[LOG] cursorImage request: shape 1 -&gt; default</span><span style="color:#000000;background-color:#ffffff;">
</span><br><span style="color:#000000;background-color:#ffffff;">[LOG] [AQ] drm: Cursor buffer imported into KMS with id 131</span><span style="color:#000000;background-color:#ffffff;">
</span><br><span style="color:#000000;background-color:#ffffff;">[LOG] [AQ] drm: Cursor buffer imported into KMS with id 138</span><span style="color:#000000;background-color:#ffffff;">
</span><br><span style="color:#000000;background-color:#ffffff;">[LOG] [AQ] drm: Cursor buffer imported into KMS with id 131</span><span style="color:#000000;background-color:#ffffff;">
</span><br><span style="color:#000000;background-color:#ffffff;">[LOG] cursorImage request: shape 9 -&gt; text</span><span style="color:#000000;background-color:#ffffff;">
</span><br><span style="color:#000000;background-color:#ffffff;">[LOG] [AQ] drm: Cursor buffer imported into KMS with id 131</span><span style="color:#000000;background-color:#ffffff;">
</span><br><span style="color:#000000;background-color:#ffffff;">[LOG] cursorImage request: shape 1 -&gt; default</span><span style="color:#000000;background-color:#ffffff;">
</span><br><span style="color:#000000;background-color:#ffffff;">[LOG] [AQ] drm: Cursor buffer imported into KMS with id 138</span><span style="color:#000000;background-color:#ffffff;">
</span><br><span style="color:#000000;background-color:#ffffff;">[LOG] cursorImage request: shape 9 -&gt; text</span><span style="color:#000000;background-color:#ffffff;">
</span><br><span style="color:#000000;background-color:#ffffff;">[LOG] [AQ] drm: Cursor buffer imported into KMS with id 131</span><span style="color:#000000;background-color:#ffffff;">
</span><br><span style="color:#000000;background-color:#ffffff;">[LOG] [AQ] [libinput] event4 &#160;- debounce state: DEBOUNCE_STATE_IS_UP ‚Üí DEBOUNCE_EVENT_PRESS ‚Üí DEBOUNCE_STATE_IS_DOWN_WAITING</span><span style="color:#000000;background-color:#ffffff;">
</span><br>
<br><span style="color:#000000;background-color:#ffffff;">[LOG] Keybind triggered, calling dispatcher (64, mouse:272, 0, mouse)</span><span style="color:#000000;background-color:#ffffff;">
</span><br><span style="color:#000000;background-color:#ffffff;">[LOG] Removing last node (dwindle)</span><span style="color:#000000;background-color:#ffffff;">
</span><br><span style="color:#000000;background-color:#ffffff;">[LOG] [AQ] drm: Cursor buffer imported into KMS with id 138</span><span style="color:#000000;background-color:#ffffff;">
</span><br><span style="color:#000000;background-color:#ffffff;">[LOG] [AQ] drm: Cursor buffer imported into KMS with id 138</span><span style="color:#000000;background-color:#ffffff;">
</span><br><span style="color:#000000;background-color:#ffffff;">[LOG] Searching for matching rules for org.kde.dolphin (title: /home/maurod ‚Äî Dolphin)</span><span style="color:#000000;background-color:#ffffff;">
</span><br><span style="color:#000000;background-color:#ffffff;">[LOG] Window rule suppressevent maximize -&gt; &#160;class:.* matched [Window 55c0892799a0: title: "/home/maurod ‚Äî Dolphin"]</span><span style="color:#000000;background-color:#ffffff;">
</span><br><span style="color:#000000;background-color:#ffffff;">[LOG] Searching for matching rules for org.kde.dolphin (title: /home/maurod ‚Äî Dolphin)</span><span style="color:#000000;background-color:#ffffff;">
</span><br><span style="color:#000000;background-color:#ffffff;">[LOG] Window rule suppressevent maximize -&gt; &#160;class:.* matched [Window 55c0892799a0: title: "/home/maurod ‚Äî Dolphin"]</span><span style="color:#000000;background-color:#ffffff;">
</span><br><span style="color:#000000;background-color:#ffffff;">[LOG] [CXDGSurfaceResource] xdg_surface 55c08920a4e0 requests geometry 0x0 1592x879</span><span style="color:#000000;background-color:#ffffff;">
</span><br><span style="color:#000000;background-color:#ffffff;">[LOG] [CWLCompositorResource] New wl_region with id 41 at 55c086dba070</span><span style="color:#000000;background-color:#ffffff;">
</span><br><span style="color:#000000;background-color:#ffffff;">[LOG] [CXDGSurfaceResource] xdg_surface 55c08920a4e0 requests geometry 0x0 1592x879</span><span style="color:#000000;background-color:#ffffff;">
</span><br><span style="color:#000000;background-color:#ffffff;">[LOG] [AQ] [libinput] event4 &#160;- debounce state: DEBOUNCE_STATE_IS_DOWN_WAITING ‚Üí DEBOUNCE_EVENT_TIMEOUT ‚Üí DEBOUNCE_STATE_IS_DOWN</span><span style="color:#000000;background-color:#ffffff;">
</span><br>
<br><span style="color:#000000;background-color:#ffffff;">[LOG] [AQ] drm: Cursor buffer imported into KMS with id 131</span><span style="color:#000000;background-color:#ffffff;">
</span><br><span style="color:#000000;background-color:#ffffff;">[LOG] [AQ] DRM Dumb: Allocated a new buffer with primeFD 104, size [Vector2D: x: 256, y: 256] and format AR24</span><span style="color:#000000;background-color:#ffffff;">
</span><br><span style="color:#000000;background-color:#ffffff;">[LOG] [AQ] DRM Dumb: Allocated a new buffer with primeFD 106, size [Vector2D: x: 256, y: 256] and format AR24</span><span style="color:#000000;background-color:#ffffff;">
</span><br><span style="color:#000000;background-color:#ffffff;">[LOG] [AQ] Swapchain: Reconfigured a swapchain to [Vector2D: x: 256, y: 256] AR24 of length 2</span><span style="color:#000000;background-color:#ffffff;">
</span><br><span style="color:#000000;background-color:#ffffff;">[LOG] [AQ] drm: Cursor buffer imported into KMS with id 161</span><span style="color:#000000;background-color:#ffffff;">
</span><br><span style="color:#000000;background-color:#ffffff;">[LOG] Searching for matching rules for org.kde.dolphin (title: /home/maurod ‚Äî Dolphin)</span><span style="color:#000000;background-color:#ffffff;">
</span><br><span style="color:#000000;background-color:#ffffff;">[LOG] Window rule suppressevent maximize -&gt; &#160;class:.* matched [Window 55c0892799a0: title: "/home/maurod ‚Äî Dolphin"]</span><span style="color:#000000;background-color:#ffffff;">
</span><br><span style="color:#000000;background-color:#ffffff;">[LOG] [CXDGSurfaceResource] xdg_surface 55c08920a4e0 requests geometry 0x0 1592x879</span><span style="color:#000000;background-color:#ffffff;">
</span><br><span style="color:#000000;background-color:#ffffff;">[LOG] [AQ] drm: Cursor buffer imported into KMS with id 162</span><span style="color:#000000;background-color:#ffffff;">
</span><br><span style="color:#000000;background-color:#ffffff;">[LOG] [AQ] GBM: Allocated a new buffer with size [Vector2D: x: 48, y: 48] and format AR24 with modifier 216172782127263763 aka BLOCK_LINEAR_2D,HEIGHT=3,KIND=219,GEN=0,SECTOR=1,COMPRESSION=1</span><span style="color:#000000;background-color:#ffffff;">
</span><br><span style="color:#000000;background-color:#ffffff;">[LOG] [AQ] GBM: Allocated a new buffer with size [Vector2D: x: 48, y: 48] and format AR24 with modifier 216172782127263763 aka BLOCK_LINEAR_2D,HEIGHT=3,KIND=219,GEN=0,SECTOR=1,COMPRESSION=1</span><span style="color:#000000;background-color:#ffffff;">
</span><br><span style="color:#000000;background-color:#ffffff;">[LOG] [AQ] Swapchain: Reconfigured a swapchain to [Vector2D: x: 48, y: 48] AR24 of length 2</span><span style="color:#000000;background-color:#ffffff;">
</span><br><span style="color:#1818b2;background-color:#ffffff;">‚ñë‚ñí‚ñì</span><span style="color:#e4e4e4;background-color:#1818b2;"> </span><span style="font-weight:bold;color:#eeeeee;background-color:#1818b2;">~</span><span style="color:#e4e4e4;background-color:#1818b2;"> </span><span style="color:#1818b2;background-color:#ffffff;">ÓÇ∞</span><span style="color:#6c6c6c;background-color:#ffffff;">‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ</span><br></span></body>
</html>
